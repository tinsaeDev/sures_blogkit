{
  "version": 3,
  "sources": ["../../node_modules/react-is/cjs/react-is.development.js", "../../node_modules/react-is/index.js", "../../node_modules/object-assign/index.js", "../../node_modules/prop-types/lib/ReactPropTypesSecret.js", "../../node_modules/prop-types/lib/has.js", "../../node_modules/prop-types/checkPropTypes.js", "../../node_modules/prop-types/factoryWithTypeCheckers.js", "../../node_modules/prop-types/index.js", "../../node_modules/@sanity/generate-help-url/index.js", "../../node_modules/@sanity/block-content-to-hyperscript/src/getImageUrl.js", "../../node_modules/@sanity/block-content-to-hyperscript/src/serializers.js", "../../node_modules/@sanity/block-content-to-hyperscript/src/buildMarksTree.js", "../../node_modules/@sanity/block-content-to-hyperscript/src/nestLists.js", "../../node_modules/@sanity/block-content-to-hyperscript/src/generateKeys.js", "../../node_modules/@sanity/block-content-to-hyperscript/src/mergeSerializers.js", "../../node_modules/@sanity/block-content-to-hyperscript/src/blocksToNodes.js", "../../node_modules/@sanity/block-content-to-hyperscript/src/internals.js", "../../node_modules/@sanity/block-content-to-hyperscript/internals.js", "../../node_modules/@sanity/block-content-to-react/src/targets/dom.js", "../../node_modules/@sanity/block-content-to-react/src/BlockContent.js"],
  "sourcesContent": ["/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n", "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n", "module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = require('./lib/has');\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar has = require('./lib/has');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n", "var baseUrl = 'https://docs.sanity.io/help/'\n\nmodule.exports = function generateHelpUrl(slug) {\n  return baseUrl + slug\n}\n", "const generateHelpUrl = require('@sanity/generate-help-url')\nconst urlBuilder = require('@sanity/image-url')\nconst objectAssign = require('object-assign')\n\nconst enc = encodeURIComponent\nconst materializeError = `You must either:\n  - Pass \\`projectId\\` and \\`dataset\\` to the block renderer\n  - Materialize images to include the \\`url\\` field.\n\nFor more information, see ${generateHelpUrl('block-content-image-materializing')}`\n\nconst getQueryString = options => {\n  const query = options.imageOptions\n  const keys = Object.keys(query)\n  if (!keys.length) {\n    return ''\n  }\n\n  const params = keys.map(key => `${enc(key)}=${enc(query[key])}`)\n  return `?${params.join('&')}`\n}\n\nconst buildUrl = props => {\n  const {node, options} = props\n  const {projectId, dataset} = options\n  const asset = node.asset\n\n  if (!asset) {\n    throw new Error('Image does not have required `asset` property')\n  }\n\n  if (asset.url) {\n    return asset.url + getQueryString(options)\n  }\n\n  if (!projectId || !dataset) {\n    throw new Error(materializeError)\n  }\n\n  const ref = asset._ref\n  if (!ref) {\n    throw new Error('Invalid image reference in block, no `_ref` found on `asset`')\n  }\n\n  return urlBuilder(objectAssign({projectId, dataset}, options.imageOptions || {}))\n    .image(node)\n    .toString()\n}\n\nmodule.exports = buildUrl\n", "const objectAssign = require('object-assign')\nconst getImageUrl = require('./getImageUrl')\n\nmodule.exports = (h, serializerOpts) => {\n  const serializeOptions = serializerOpts || {useDashedStyles: false}\n\n  // Low-level block serializer\n  function BlockSerializer(props) {\n    const {node, serializers, options, isInline, children} = props\n    const blockType = node._type\n    const serializer = serializers.types[blockType]\n    if (!serializer) {\n      if (options.ignoreUnknownTypes) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Unknown block type \"${blockType}\", please specify a serializer for it in the \\`serializers.types\\` prop`\n        )\n        return h(serializers.unknownType, {node, options, isInline}, children)\n      }\n      throw new Error(\n        `Unknown block type \"${blockType}\", please specify a serializer for it in the \\`serializers.types\\` prop`\n      )\n    }\n\n    return h(serializer, {node, options, isInline}, children)\n  }\n\n  // Low-level span serializer\n  function SpanSerializer(props) {\n    const {mark, children} = props.node\n    const isPlain = typeof mark === 'string'\n    const markType = isPlain ? mark : mark._type\n    const serializer = props.serializers.marks[markType]\n    if (!serializer) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Unknown mark type \"${markType}\", please specify a serializer for it in the \\`serializers.marks\\` prop`\n      )\n      return h(props.serializers.unknownMark, null, children)\n    }\n\n    return h(serializer, props.node, children)\n  }\n\n  // Low-level list serializer\n  function ListSerializer(props) {\n    const tag = props.type === 'bullet' ? 'ul' : 'ol'\n    return h(tag, null, props.children)\n  }\n\n  // Low-level list item serializer\n  function ListItemSerializer(props) {\n    const children =\n      !props.node.style || props.node.style === 'normal'\n        ? // Don't wrap plain text in paragraphs inside of a list item\n          props.children\n        : // But wrap any other style in whatever the block serializer says to use\n          h(props.serializers.types.block, props, props.children)\n\n    return h('li', null, children)\n  }\n\n  // Unknown type default serializer\n  function DefaultUnknownTypeSerializer(props) {\n    return h(\n      'div',\n      {style: {display: 'none'}},\n      `Unknown block type \"${\n        props.node._type\n      }\", please specify a serializer for it in the \\`serializers.types\\` prop`\n    )\n  }\n\n  // Renderer of an actual block of type `block`. Confusing, we know.\n  function BlockTypeSerializer(props) {\n    const style = props.node.style || 'normal'\n\n    if (/^h\\d/.test(style)) {\n      return h(style, null, props.children)\n    }\n\n    return style === 'blockquote'\n      ? h('blockquote', null, props.children)\n      : h('p', null, props.children)\n  }\n\n  // Serializers for things that can be directly attributed to a tag without any props\n  // We use partial application to do this, passing the tag name as the first argument\n  function RawMarkSerializer(tag, props) {\n    return h(tag, null, props.children)\n  }\n\n  function UnderlineSerializer(props) {\n    const style = serializeOptions.useDashedStyles\n      ? {'text-decoration': 'underline'}\n      : {textDecoration: 'underline'}\n\n    return h('span', {style}, props.children)\n  }\n\n  function StrikeThroughSerializer(props) {\n    return h('del', null, props.children)\n  }\n\n  function LinkSerializer(props) {\n    return h('a', {href: props.mark.href}, props.children)\n  }\n\n  function ImageSerializer(props) {\n    if (!props.node.asset) {\n      return null\n    }\n\n    const img = h('img', {src: getImageUrl(props)})\n    return props.isInline ? img : h('figure', null, img)\n  }\n\n  // Serializer that recursively calls itself, producing a hyperscript tree of spans\n  function serializeSpan(span, serializers, index, options) {\n    if (span === '\\n' && serializers.hardBreak) {\n      return h(serializers.hardBreak, {key: `hb-${index}`})\n    }\n\n    if (typeof span === 'string') {\n      return serializers.text ? h(serializers.text, {key: `text-${index}`}, span) : span\n    }\n\n    let children\n    if (span.children) {\n      children = {\n        children: span.children.map((child, i) =>\n          options.serializeNode(child, i, span.children, true)\n        )\n      }\n    }\n\n    const serializedNode = objectAssign({}, span, children)\n\n    return h(serializers.span, {\n      key: span._key || `span-${index}`,\n      node: serializedNode,\n      serializers\n    })\n  }\n\n  const HardBreakSerializer = () => h('br')\n  const defaultMarkSerializers = {\n    strong: RawMarkSerializer.bind(null, 'strong'),\n    em: RawMarkSerializer.bind(null, 'em'),\n    code: RawMarkSerializer.bind(null, 'code'),\n    underline: UnderlineSerializer,\n    'strike-through': StrikeThroughSerializer,\n    link: LinkSerializer\n  }\n\n  const defaultSerializers = {\n    // Common overrides\n    types: {\n      block: BlockTypeSerializer,\n      image: ImageSerializer\n    },\n    marks: defaultMarkSerializers,\n\n    // Less common overrides\n    list: ListSerializer,\n    listItem: ListItemSerializer,\n\n    block: BlockSerializer,\n    span: SpanSerializer,\n    hardBreak: HardBreakSerializer,\n\n    unknownType: DefaultUnknownTypeSerializer,\n    unknownMark: 'span',\n\n    // Container element\n    container: 'div',\n\n    // Allow overriding text renderer, but leave undefined to just use plain strings by default\n    text: undefined,\n\n    // Empty nodes (React uses null, hyperscript with empty strings)\n    empty: ''\n  }\n\n  return {\n    defaultSerializers,\n    serializeSpan\n  }\n}\n", "const defaultMarks = ['strong', 'em', 'code', 'underline', 'strike-through']\n\nconst buildMarksTree = block => {\n  const {children, markDefs} = block\n  if (!children || !children.length) {\n    return []\n  }\n\n  const sortedMarks = children.map(sortMarksByOccurences)\n  const rootNode = {_type: 'span', children: []}\n  let nodeStack = [rootNode]\n\n  children.forEach((span, i) => {\n    const marksNeeded = sortedMarks[i]\n    if (!marksNeeded) {\n      const lastNode = nodeStack[nodeStack.length - 1]\n      lastNode.children.push(span)\n      return\n    }\n\n    let pos = 1\n\n    // Start at position one. Root is always plain and should never be removed. (?)\n    if (nodeStack.length > 1) {\n      for (pos; pos < nodeStack.length; pos++) {\n        const mark = nodeStack[pos].markKey\n        const index = marksNeeded.indexOf(mark)\n        // eslint-disable-next-line max-depth\n        if (index === -1) {\n          break\n        }\n\n        marksNeeded.splice(index, 1)\n      }\n    }\n\n    // Keep from beginning to first miss\n    nodeStack = nodeStack.slice(0, pos)\n\n    // Add needed nodes\n    let currentNode = findLastParentNode(nodeStack)\n    marksNeeded.forEach(mark => {\n      const node = {\n        _type: 'span',\n        _key: span._key,\n        children: [],\n        mark: markDefs.find(def => def._key === mark) || mark,\n        markKey: mark\n      }\n\n      currentNode.children.push(node)\n      nodeStack.push(node)\n      currentNode = node\n    })\n\n    // Split at newlines to make individual line chunks, but keep newline\n    // characters as individual elements in the array. We use these characters\n    // in the span serializer to trigger hard-break rendering\n    if (isTextSpan(span)) {\n      const lines = span.text.split('\\n')\n      for (let line = lines.length; line-- > 1; ) {\n        lines.splice(line, 0, '\\n')\n      }\n\n      currentNode.children = currentNode.children.concat(lines)\n    } else {\n      currentNode.children = currentNode.children.concat(span)\n    }\n  })\n\n  return rootNode.children\n}\n\n// We want to sort all the marks of all the spans in the following order:\n// 1. Marks that are shared amongst the most adjacent siblings\n// 2. Non-default marks (links, custom metadata)\n// 3. Built-in, plain marks (bold, emphasis, code etc)\nfunction sortMarksByOccurences(span, i, spans) {\n  if (!span.marks || span.marks.length === 0) {\n    return span.marks || []\n  }\n\n  const markOccurences = span.marks.reduce((occurences, mark) => {\n    occurences[mark] = occurences[mark] ? occurences[mark] + 1 : 1\n\n    for (let siblingIndex = i + 1; siblingIndex < spans.length; siblingIndex++) {\n      const sibling = spans[siblingIndex]\n\n      if (sibling.marks && Array.isArray(sibling.marks) && sibling.marks.indexOf(mark) !== -1) {\n        occurences[mark]++\n      } else {\n        break\n      }\n    }\n\n    return occurences\n  }, {})\n\n  const sortByOccurence = sortMarks.bind(null, markOccurences)\n\n  // Slicing because sort() mutates the input\n  return span.marks.slice().sort(sortByOccurence)\n}\n\nfunction sortMarks(occurences, markA, markB) {\n  const aOccurences = occurences[markA] || 0\n  const bOccurences = occurences[markB] || 0\n\n  if (aOccurences !== bOccurences) {\n    return bOccurences - aOccurences\n  }\n\n  const aDefaultPos = defaultMarks.indexOf(markA)\n  const bDefaultPos = defaultMarks.indexOf(markB)\n\n  // Sort default marks last\n  if (aDefaultPos !== bDefaultPos) {\n    return aDefaultPos - bDefaultPos\n  }\n\n  // Sort other marks simply by key\n  if (markA < markB) {\n    return -1\n  } else if (markA > markB) {\n    return 1\n  }\n\n  return 0\n}\n\nfunction isTextSpan(node) {\n  return (\n    node._type === 'span' &&\n    typeof node.text === 'string' &&\n    (Array.isArray(node.marks) || typeof node.marks === 'undefined')\n  )\n}\n\nfunction findLastParentNode(nodes) {\n  for (let i = nodes.length - 1; i >= 0; i--) {\n    const node = nodes[i]\n    if (node._type === 'span' && node.children) {\n      return node\n    }\n  }\n\n  return undefined\n}\n\nmodule.exports = buildMarksTree\n", "const objectAssign = require('object-assign')\n\n/* eslint-disable max-depth, complexity */\nfunction nestLists(blocks, mode = 'html') {\n  const tree = []\n  let currentList\n\n  for (let i = 0; i < blocks.length; i++) {\n    const block = blocks[i]\n    if (!isListBlock(block)) {\n      tree.push(block)\n      currentList = null\n      continue\n    }\n\n    // Start of a new list?\n    if (!currentList) {\n      currentList = listFromBlock(block)\n      tree.push(currentList)\n      continue\n    }\n\n    // New list item within same list?\n    if (blockMatchesList(block, currentList)) {\n      currentList.children.push(block)\n      continue\n    }\n\n    // Different list props, are we going deeper?\n    if (block.level > currentList.level) {\n      const newList = listFromBlock(block)\n\n      if (mode === 'html') {\n        // Because HTML is kinda weird, nested lists needs to be nested within list items\n        // So while you would think that we could populate the parent list with a new sub-list,\n        // We actually have to target the last list element (child) of the parent.\n        // However, at this point we need to be very careful - simply pushing to the list of children\n        // will mutate the input, and we don't want to blindly clone the entire tree.\n\n        // Clone the last child while adding our new list as the last child of it\n        const lastListItem = lastChild(currentList)\n        const newLastChild = objectAssign({}, lastListItem, {\n          children: lastListItem.children.concat(newList)\n        })\n\n        // Swap the last child\n        currentList.children[currentList.children.length - 1] = newLastChild\n      } else {\n        currentList.children.push(newList)\n      }\n\n      // Set the newly created, deeper list as the current\n      currentList = newList\n      continue\n    }\n\n    // Different list props, are we going back up the tree?\n    if (block.level < currentList.level) {\n      // Current list has ended, and we need to hook up with a parent of the same level and type\n      const match = findListMatching(tree[tree.length - 1], block)\n      if (match) {\n        currentList = match\n        currentList.children.push(block)\n        continue\n      }\n\n      // Similar parent can't be found, assume new list\n      currentList = listFromBlock(block)\n      tree.push(currentList)\n      continue\n    }\n\n    // Different list props, different list style?\n    if (block.listItem !== currentList.listItem) {\n      const match = findListMatching(tree[tree.length - 1], {level: block.level})\n      if (match && match.listItem === block.listItem) {\n        currentList = match\n        currentList.children.push(block)\n        continue\n      } else {\n        currentList = listFromBlock(block)\n        tree.push(currentList)\n        continue\n      }\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn('Unknown state encountered for block', block)\n    tree.push(block)\n  }\n\n  return tree\n}\n\nfunction isListBlock(block) {\n  return Boolean(block.listItem)\n}\n\nfunction blockMatchesList(block, list) {\n  return block.level === list.level && block.listItem === list.listItem\n}\n\nfunction listFromBlock(block) {\n  return {\n    _type: 'list',\n    _key: `${block._key}-parent`,\n    level: block.level,\n    listItem: block.listItem,\n    children: [block]\n  }\n}\n\nfunction lastChild(block) {\n  return block.children && block.children[block.children.length - 1]\n}\n\nfunction findListMatching(rootNode, matching) {\n  const filterOnType = typeof matching.listItem === 'string'\n  if (\n    rootNode._type === 'list' &&\n    rootNode.level === matching.level &&\n    (filterOnType && rootNode.listItem === matching.listItem)\n  ) {\n    return rootNode\n  }\n\n  const node = lastChild(rootNode)\n  if (!node) {\n    return false\n  }\n\n  return findListMatching(node, matching)\n}\n\nmodule.exports = nestLists\n", "const objectAssign = require('object-assign')\n\nmodule.exports = blocks => {\n  return blocks.map(block => {\n    if (block._key) {\n      return block\n    }\n\n    return objectAssign({_key: getStaticKey(block)}, block)\n  })\n}\n\nfunction getStaticKey(item) {\n  return checksum(JSON.stringify(item))\n    .toString(36)\n    .replace(/[^A-Za-z0-9]/g, '')\n}\n\n/* eslint-disable no-bitwise */\nfunction checksum(str) {\n  let hash = 0\n  const strlen = str.length\n  if (strlen === 0) {\n    return hash\n  }\n\n  for (let i = 0; i < strlen; i++) {\n    hash = (hash << 5) - hash + str.charCodeAt(i)\n    hash &= hash // Convert to 32bit integer\n  }\n\n  return hash\n}\n/* eslint-enable no-bitwise */\n", "const objectAssign = require('object-assign')\nconst isDefined = val => typeof val !== 'undefined'\n\n// Recursively merge/replace default serializers with user-specified serializers\nmodule.exports = function mergeSerializers(defaultSerializers, userSerializers) {\n  return Object.keys(defaultSerializers).reduce((acc, key) => {\n    const type = typeof defaultSerializers[key]\n    if (type === 'function') {\n      acc[key] = isDefined(userSerializers[key]) ? userSerializers[key] : defaultSerializers[key]\n    } else if (type === 'object') {\n      acc[key] = objectAssign({}, defaultSerializers[key], userSerializers[key])\n    } else {\n      acc[key] =\n        typeof userSerializers[key] === 'undefined' ? defaultSerializers[key] : userSerializers[key]\n    }\n    return acc\n  }, {})\n}\n", "const objectAssign = require('object-assign')\nconst buildMarksTree = require('./buildMarksTree')\nconst nestLists = require('./nestLists')\nconst generateKeys = require('./generateKeys')\nconst mergeSerializers = require('./mergeSerializers')\n\n// Properties to extract from props and pass to serializers as options\nconst optionProps = ['projectId', 'dataset', 'imageOptions', 'ignoreUnknownTypes']\nconst isDefined = val => typeof val !== 'undefined'\nconst defaults = {imageOptions: {}, ignoreUnknownTypes: true}\n\nfunction blocksToNodes(h, properties, defaultSerializers, serializeSpan) {\n  const props = objectAssign({}, defaults, properties)\n  const rawBlocks = Array.isArray(props.blocks) ? props.blocks : [props.blocks]\n  const keyedBlocks = generateKeys(rawBlocks)\n  const blocks = nestLists(keyedBlocks, props.listNestMode)\n  const serializers = mergeSerializers(defaultSerializers, props.serializers || {})\n\n  const options = optionProps.reduce((opts, key) => {\n    const value = props[key]\n    if (isDefined(value)) {\n      opts[key] = value\n    }\n    return opts\n  }, {})\n\n  function serializeNode(node, index, siblings, isInline) {\n    if (isList(node)) {\n      return serializeList(node)\n    }\n\n    if (isListItem(node)) {\n      return serializeListItem(node, findListItemIndex(node, siblings))\n    }\n\n    if (isSpan(node)) {\n      return serializeSpan(node, serializers, index, {serializeNode})\n    }\n\n    return serializeBlock(node, index, isInline)\n  }\n\n  function findListItemIndex(node, siblings) {\n    let index = 0\n    for (let i = 0; i < siblings.length; i++) {\n      if (siblings[i] === node) {\n        return index\n      }\n\n      if (!isListItem(siblings[i])) {\n        continue\n      }\n\n      index++\n    }\n\n    return index\n  }\n\n  function serializeBlock(block, index, isInline) {\n    const tree = buildMarksTree(block)\n    const children = tree.map((node, i, siblings) => serializeNode(node, i, siblings, true))\n    const blockProps = {\n      key: block._key || `block-${index}`,\n      node: block,\n      isInline,\n      serializers,\n      options\n    }\n\n    return h(serializers.block, blockProps, children)\n  }\n\n  function serializeListItem(block, index) {\n    const key = block._key\n    const tree = buildMarksTree(block)\n    const children = tree.map(serializeNode)\n    return h(serializers.listItem, {node: block, serializers, index, key, options}, children)\n  }\n\n  function serializeList(list) {\n    const type = list.listItem\n    const level = list.level\n    const key = list._key\n    const children = list.children.map(serializeNode)\n    return h(serializers.list, {key, level, type, options}, children)\n  }\n\n  // Default to false, so `undefined` will evaluate to the default here\n  const renderContainerOnSingleChild = Boolean(props.renderContainerOnSingleChild)\n\n  const nodes = blocks.map(serializeNode)\n  if (renderContainerOnSingleChild || nodes.length > 1) {\n    const containerProps = props.className ? {className: props.className} : {}\n    return h(serializers.container, containerProps, nodes)\n  }\n\n  if (nodes[0]) {\n    return nodes[0]\n  }\n\n  return typeof serializers.empty === 'function' ? h(serializers.empty) : serializers.empty\n}\n\nfunction isList(block) {\n  return block._type === 'list' && block.listItem\n}\n\nfunction isListItem(block) {\n  return block._type === 'block' && block.listItem\n}\n\nfunction isSpan(block) {\n  return typeof block === 'string' || block.marks || block._type === 'span'\n}\n\nmodule.exports = blocksToNodes\n", "const getSerializers = require('./serializers')\nconst blocksToNodes = require('./blocksToNodes')\nconst getImageUrl = require('./getImageUrl')\nconst mergeSerializers = require('./mergeSerializers')\n\nmodule.exports = {\n  blocksToNodes: (renderNode, props, defaultSerializers, serializeSpan) => {\n    if (defaultSerializers) {\n      return blocksToNodes(renderNode, props, defaultSerializers, serializeSpan)\n    }\n\n    // Backwards-compatibility\n    const serializers = getSerializers(renderNode)\n    return blocksToNodes(\n      renderNode,\n      props,\n      serializers.defaultSerializers,\n      serializers.serializeSpan\n    )\n  },\n  getSerializers,\n  getImageUrl,\n  mergeSerializers\n}\n", "module.exports = require('./lib/internals')\n", "const React = require('react')\nconst {getSerializers} = require('@sanity/block-content-to-hyperscript/internals')\n\nconst renderNode = React.createElement\nconst {defaultSerializers, serializeSpan} = getSerializers(renderNode)\n\nmodule.exports = {\n  serializeSpan,\n  serializers: defaultSerializers,\n  renderProps: {nestMarks: true},\n}\n", "const React = require('react')\nconst PropTypes = require('prop-types')\nconst internals = require('@sanity/block-content-to-hyperscript/internals')\nconst {serializers, serializeSpan, renderProps} = require('./targets/dom')\n\nconst {getImageUrl, blocksToNodes, mergeSerializers} = internals\nconst renderNode = React.createElement\n\nconst SanityBlockContent = (props) => {\n  const customSerializers = mergeSerializers(\n    SanityBlockContent.defaultSerializers,\n    props.serializers\n  )\n\n  const blockProps = Object.assign({}, renderProps, props, {\n    serializers: customSerializers,\n    blocks: props.blocks || [],\n  })\n\n  return blocksToNodes(renderNode, blockProps, serializers, serializeSpan)\n}\n\n// Expose default serializers to the user\nSanityBlockContent.defaultSerializers = serializers\n\n// Expose logic for building image URLs from an image reference/node\nSanityBlockContent.getImageUrl = getImageUrl\n\nSanityBlockContent.propTypes = {\n  className: PropTypes.string,\n  renderContainerOnSingleChild: PropTypes.bool,\n  ignoreUnknownTypes: PropTypes.bool,\n\n  // When rendering images, we need project id and dataset, unless images are materialized\n  projectId: PropTypes.string,\n  dataset: PropTypes.string,\n  imageOptions: PropTypes.object,\n\n  serializers: PropTypes.shape({\n    // Common overrides\n    types: PropTypes.object,\n    marks: PropTypes.object,\n\n    // Less common overrides\n    list: PropTypes.func,\n    listItem: PropTypes.func,\n\n    // Low-level serializers\n    block: PropTypes.func,\n    span: PropTypes.func,\n  }),\n\n  blocks: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        _type: PropTypes.string.isRequired,\n      })\n    ),\n    PropTypes.shape({\n      _type: PropTypes.string.isRequired,\n    }),\n  ]).isRequired,\n}\n\nSanityBlockContent.defaultProps = {\n  ignoreUnknownTypes: true,\n  renderContainerOnSingleChild: false,\n  serializers: {},\n  imageOptions: {},\n}\n\nmodule.exports = SanityBlockContent\n"],
  "mappings": "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",
  "names": ["i", "checker", "generateHelpUrl", "require", "urlBuilder", "objectAssign", "enc", "encodeURIComponent", "materializeError", "getQueryString", "options", "query", "imageOptions", "keys", "Object", "length", "params", "map", "key", "join", "buildUrl", "props", "node", "projectId", "dataset", "asset", "Error", "url", "ref", "_ref", "image", "toString", "module", "exports", "objectAssign", "require", "getImageUrl", "module", "exports", "h", "serializerOpts", "serializeOptions", "useDashedStyles", "BlockSerializer", "props", "node", "serializers", "options", "isInline", "children", "blockType", "_type", "serializer", "types", "ignoreUnknownTypes", "console", "warn", "unknownType", "Error", "SpanSerializer", "mark", "isPlain", "markType", "marks", "unknownMark", "ListSerializer", "tag", "type", "ListItemSerializer", "style", "block", "DefaultUnknownTypeSerializer", "display", "BlockTypeSerializer", "test", "RawMarkSerializer", "UnderlineSerializer", "textDecoration", "StrikeThroughSerializer", "LinkSerializer", "href", "ImageSerializer", "asset", "img", "src", "serializeSpan", "span", "index", "hardBreak", "key", "text", "map", "child", "i", "serializeNode", "serializedNode", "_key", "HardBreakSerializer", "defaultMarkSerializers", "strong", "bind", "em", "code", "underline", "link", "defaultSerializers", "image", "list", "listItem", "container", "undefined", "empty", "defaultMarks", "buildMarksTree", "block", "children", "markDefs", "length", "sortedMarks", "map", "sortMarksByOccurences", "rootNode", "_type", "nodeStack", "forEach", "span", "i", "marksNeeded", "lastNode", "push", "pos", "mark", "markKey", "index", "indexOf", "splice", "slice", "currentNode", "findLastParentNode", "node", "_key", "find", "def", "isTextSpan", "lines", "text", "split", "line", "concat", "spans", "marks", "markOccurences", "reduce", "occurences", "siblingIndex", "sibling", "Array", "isArray", "sortByOccurence", "sortMarks", "bind", "sort", "markA", "markB", "aOccurences", "bOccurences", "aDefaultPos", "bDefaultPos", "nodes", "undefined", "module", "exports", "objectAssign", "require", "nestLists", "blocks", "mode", "tree", "currentList", "i", "length", "block", "isListBlock", "push", "listFromBlock", "blockMatchesList", "children", "level", "newList", "lastListItem", "lastChild", "newLastChild", "concat", "match", "findListMatching", "listItem", "console", "warn", "Boolean", "list", "_type", "_key", "rootNode", "matching", "filterOnType", "node", "module", "exports", "objectAssign", "require", "module", "exports", "blocks", "map", "block", "_key", "getStaticKey", "item", "checksum", "JSON", "stringify", "toString", "replace", "str", "hash", "strlen", "length", "i", "charCodeAt", "objectAssign", "require", "isDefined", "val", "module", "exports", "mergeSerializers", "defaultSerializers", "userSerializers", "Object", "keys", "reduce", "acc", "key", "type", "objectAssign", "require", "buildMarksTree", "nestLists", "generateKeys", "mergeSerializers", "optionProps", "isDefined", "val", "defaults", "imageOptions", "ignoreUnknownTypes", "blocksToNodes", "h", "properties", "defaultSerializers", "serializeSpan", "props", "rawBlocks", "Array", "isArray", "blocks", "keyedBlocks", "listNestMode", "serializers", "options", "reduce", "opts", "key", "value", "serializeNode", "node", "index", "siblings", "isInline", "isList", "serializeList", "isListItem", "serializeListItem", "findListItemIndex", "isSpan", "serializeBlock", "i", "length", "block", "tree", "children", "map", "blockProps", "_key", "listItem", "list", "type", "level", "renderContainerOnSingleChild", "Boolean", "nodes", "containerProps", "className", "container", "empty", "_type", "marks", "module", "exports", "getSerializers", "require", "blocksToNodes", "getImageUrl", "mergeSerializers", "module", "exports", "renderNode", "props", "defaultSerializers", "serializeSpan", "serializers", "require_internals", "React", "require", "getSerializers", "renderNode", "createElement", "defaultSerializers", "serializeSpan", "module", "exports", "serializers", "renderProps", "nestMarks", "React", "require", "PropTypes", "internals", "serializers", "serializeSpan", "renderProps", "getImageUrl", "blocksToNodes", "mergeSerializers", "renderNode", "createElement", "SanityBlockContent", "props", "customSerializers", "defaultSerializers", "blockProps", "Object", "assign", "blocks", "propTypes", "className", "string", "renderContainerOnSingleChild", "bool", "ignoreUnknownTypes", "projectId", "dataset", "imageOptions", "object", "shape", "types", "marks", "list", "func", "listItem", "block", "span", "oneOfType", "arrayOf", "_type", "isRequired", "defaultProps", "module", "exports"]
}
